@model TreatmentPlansViewModel;
@inject UserManager<ApplicationUser> userManger;
@{
    var applicationUser = await userManger.GetUserAsync(User) ?? new ApplicationUser();
}

<tr class="plan-row">
    <td>
        <span title="@Model.Name" style="text-overflow:ellipsis; overflow:hidden; width:100px; white-space:nowrap; display:inline-block">
            @Model.Name
        </span>

    </td>

    <td>
        <span class="badge badge-light-info">@Model.StartDate</span>
    </td>
    <td>
        <span class="badge badge-light-info">@Model.EndDate</span>
    </td>
    <td>
        @{
            DateOnly today = DateOnly.FromDateTime(DateTime.Today);
            TimeOnly time = TimeOnly.FromDateTime(DateTime.Now);
            DateTime dt1 = DateTime.Parse(Model.EndDate.ToString()).Date;
            DateTime dt2 = DateTime.Parse(today.ToString()).Date;
            int result = DateTime.Compare(dt1, dt2);
            if (result >= 0)
            {
                <span class="badge badge-light-success">in process</span>

            }
            else
            {
                <span class="badge badge-light-danger">completed</span>
            }
        }
    </td>
    <td class="text-center">
        <a href="#" class="btn btn-light btn-active-light-primary btn-flex btn-center btn-sm" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
            Actions
            <span class="svg-icon svg-icon-muted svg-icon-5">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M11.4343 12.7344L7.25 8.55005C6.83579 8.13583 6.16421 8.13584 5.75 8.55005C5.33579 8.96426 5.33579 9.63583 5.75 10.05L11.2929 15.5929C11.6834 15.9835 12.3166 15.9835 12.7071 15.5929L18.25 10.05C18.6642 9.63584 18.6642 8.96426 18.25 8.55005C17.8358 8.13584 17.1642 8.13584 16.75 8.55005L12.5657 12.7344C12.2533 13.0468 11.7467 13.0468 11.4343 12.7344Z" fill="currentColor" />
                </svg>
            </span>
        </a>
        <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-125px py-4" data-kt-menu="true">
            <!--begin::Menu item-->
            <div class="menu-item px-3">
                <a href="javascript:;" class="menu-link px-3 js-render-modal" data-title="TPlan Details" data-url="/TPlans/Details/@Model.Id">
                    Details
                </a>
            </div>
            @if (await userManger.IsInRoleAsync(applicationUser, "Doctor"))
            {
                <!--begin::Menu item-->
                <div class="menu-item px-3">
                    <a href="javascript:;" class="menu-link px-3 js-render-modal tab-plans-datatable" data-update="true" data-title="Edit TPlan" data-url="/TPlans/Update/@Model.Id">
                        Edit
                    </a>
                </div>
                <!--end::Menu item-->
                <!--begin::Menu item-->
                <div class="menu-item px-3">
                    <a href="javascript:;" class="menu-link px-3 js-delete-plan" data-url="/TPlans/Delete/@Model.Id">
                        Delete
                    </a>
                </div>
                <!--end::Menu item-->
            }
            <!--end::Menu item-->

        </div>
    </td>
</tr>