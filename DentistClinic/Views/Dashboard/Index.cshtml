@inject UserManager<ApplicationUser> userManager;
@model DashBoardViewModel
@{
    ViewData["Title"] = "Dashboard";
    ApplicationUser applicationUser = await userManager.GetUserAsync(User) ?? new ApplicationUser();
}

<div class="card">
    <div class="good-morning-blk px-3">
        <div class="row">
            <div class="col-md-6 position-blk d-none d-lg-flex">
                <div class="morning-img">
                    <img src="~/assets/images/morning-img-02.png" alt="">
                </div>
            </div>
            <div class="col-12 col-lg-6">
                <div class="morning-user ps-5">
                    
                    <h2 style="margin-left:20px">Good Morning, <br>
                        @if (await userManager.IsInRoleAsync(applicationUser!, "Doctor"))
                        {
                            <span style="margin-left:30px">Dr.Ahmed Bahnsawy</span>
                        }
                        
                     </h2>
                    <p style="margin-left:50px">Have a nice day at work</p>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="clinic-analatics">
    <div class="row">
        <div class="col-7 d-flex flex-column">
            <div class="card mt-5 p-5">
                <h2 class="text-center mt-5" style="color:#2E37A4">Reservation Statistics</h2>
                <canvas id="ReservationChart"></canvas>
            </div>

            @if (await userManager.IsInRoleAsync(applicationUser!, "Doctor"))
            {
                <div class="card mt-5 p-5">
                    <h2 class="text-center mt-5" style="color:#2E37A4">Payment Statistics</h2>
                    <div class="w-50 mx-auto">
                        <canvas id="PaymentChart"></canvas>
                    </div>
                    <canvas class="mt-5" id="Payment2Chart"></canvas>
                </div>
            }
            else
            {
                <div class="card mt-5 p-5 d-none">
                    <h2 class="text-center mt-5" style="color:#2E37A4">Payment Statistics</h2>
                    <div class="w-50 mx-auto">
                        <canvas id="PaymentChart"></canvas>
                    </div>
                    <canvas class="mt-5" id="Payment2Chart"></canvas>
                </div>
            }

        </div>
        <div class="col-5 d-flex flex-column">
            <div class="card mt-5 p-5">
                <h2 class="text-center mt-5" style="color:#2E37A4">Gender Statistics</h2>
                <div class="w-50 mx-auto">
                    <canvas id="GenderChart"></canvas>
                </div>
            </div>
            <div class="card mt-5 p-5 ">
                <h2 class="text-center mt-5" style="color:#2E37A4">Online & Offline Statistics</h2>
                <div class="w-50 mx-auto">
                    <canvas id="PatientStatusChart"></canvas>
                </div>
            </div>
        </div>

    </div>
</div>

<br />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    
    let dataReservationFromModel = @Html.Raw(Json.Serialize(Model.ReservationCount));
    let dataPaymentFromModel = [@Model.paymentGains, @Model.paymentRemaining];
    let dataPayment2FromModel = @Html.Raw(Json.Serialize(Model.paymentGainsList));
    let dataPayment3FromModel = @Html.Raw(Json.Serialize(Model.paymentRemainingList));
    let dataGenderFromModel = [@Model.GenderMale,@Model.GenderFemale,@Model.GenderChild];
    let PatientStatusFromModel = [@Model.Online,@Model.Offline];
    
</script>
<script src="~/js/DashBoard.js"></script>